<h1>All available Volunteer Opportunities</h1>

<div class="appointments"></div>

<script id="appointment-template" type="text/x-handlebars-template">
  <div class="appointment-content">
    <h4>{{title}}</h4>
    <h4>{{info}}</h4>
    <div class="appointment-data">
      from post: <a href="/posts/{{post.id}}">{{post.title}}</a>, their user <a href="/users/{{owner_id}}">profile</a> 
    </div>
    <form action="/appointments/{{id}}" method="get" class="more-info-button" id="appointment-{{id}}">
      <input type="submit" value="More Info" />
    </form>
  </div>
</script>
<script id="form-template" type="text/x-handlebars-template">
  <form action="/posts/{{post.id}}/appointments/{{id}}" method="patch" class="update-appointment-form">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <label for='appointment[info]'>information:</label>
  <textarea class="appointment-info-text" name='appointment[info]', cols="100", rows="10">{{info}}</textarea>
  <p><input class="update-appointment" type="submit" value="Update Appointment" /></p>
</script>

<% content_for :js do %>
  <script>
    class Appointment {
      constructor(attributes = {}) {
        this.post = attributes.post
        this.id = attributes.id
        this.info = attributes.info
        this.start_date = attributes.start_date
        this.end_date = attributes.end_date
        this.owner_id = attributes.owner_id
        this.isCurrentUser = this.checkUser()
      }
      checkUser(){
        return (this.owner_id && parseInt(this.owner_id) === parseInt(Appointment.userID))
      }
      renderAppointment() {
        return Appointment.template(this)
      }
      renderForm(){
        return Appointment.formTemplate(this)
      }
    }
    Appointment.getAppointments = function(){
      $.ajax({
        dataType: "JSON",
        url: '/appointments/available',
        method: "get"
      }).success((appointments) => {
        Appointment.renderAppointments(appointments)
        Appointment.attachMoreListeners()
      })
    }
    Appointment.renderAppointments = function(appointments) {
      appointments.forEach((appointment) => {
        a = new this(appointment)
        this.appointmentsDiv.append(a.renderAppointment())
      })
    }
    Appointment.attachMoreListeners = function(){
      $(".more-info-button").on("submit", function(e) {
        e.preventDefault()
        $.get($(this).attr("action"), (appointment) => {
          Appointment.appointmentsDiv.html(new Appointment(appointment).renderAppointment())
        })
      })
    }
    Appointment.renderTemplates = function(){
      this.template = Handlebars.compile(document.getElementById("appointment-template").innerHTML)
      this.formTemplate = Handlebars.compile(document.getElementById("form-template").innerHTML)
    }
    Appointment.renderAttributes = function(){
      this.appointmentsDiv = $('.appointments')
      this.userID = $(".user-link").attr("href").slice(-1)
    }
    $(
      function() {
        Appointment.renderTemplates()
        Appointment.renderAttributes()
        Appointment.getAppointments()
      }
    )
  </script>
<% end %>